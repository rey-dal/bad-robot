#Worst Friend

#libraries
import io
import random
import string # to process standard python strings
import warnings

#import numpy as np
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

import warnings
warnings.filterwarnings('ignore')

import nltk
from nltk.stem import WordNetLemmatizer
nltk.download('popular', quiet=True) # for downloading packages


nltk.download('punkt') # first-time use only
nltk.download('wordnet') # first-time use only


#Reading in the corpus
with open('advices.txt','r', encoding='utf8', errors ='ignore') as fin:
    raw = fin.read().lower()

#tokenisation
sent_tokens = nltk.sent_tokenize(raw) # converts to list of sentences 
word_tokens = nltk.word_tokenize(raw) # converts to list of words

# Preprocessing
lemmer = WordNetLemmatizer()
def LemTokens(tokens):
    return [lemmer.lemmatize(token) for token in tokens]
remove_punct_dict = dict((ord(punct), None) for punct in string.punctuation)
def LemNormalize(text):
    return LemTokens(nltk.word_tokenize(text.lower().translate(remove_punct_dict)))


# Keyword Matching
GREETING_INPUTS = ("hello", "hi", "greetings", "sup", "what's up","hey","yo","wassup","wazzup")
GREETING_RESPONSES = ["...", "Hi *****", "-.-", "What do you want?", "Leave me alone", "You know i don't want to talk to you", "Hi bestie, why are you bothering me? "]

def greeting(sentence):
    """If input is a greeting, return a greeting """
    for word in sentence.split():
        if word.lower() in GREETING_INPUTS:
            return random.choice(GREETING_RESPONSES)


# Generating response
def response(user_response):
    worst_response=''
    sent_tokens.append(user_response)
    TfidfVec = TfidfVectorizer(tokenizer=LemNormalize, stop_words='english')
    tfidf = TfidfVec.fit_transform(sent_tokens)
    vals = cosine_similarity(tfidf[-1], tfidf)
    idx=vals.argsort()[0][-2]
    flat = vals.flatten()
    flat.sort()
    req_tfidf = flat[-2]
    if(req_tfidf==0):
        worst_response=worst_response+"What did you just say? -.- "
        return worst_response
    else:
        worst_response = worst_response+sent_tokens[idx]
        return worst_response


flag=True
print("I am your worst friend and I give bad advice.")
while(flag==True):
    user_response = input()
    user_response=user_response.lower()
    if(user_response!='bye'):
        if(user_response=='thanks' or user_response=='thank you' ):
            flag=False
            print("Ok.")
        else:
            if(greeting(user_response)!=None):
                print("worst friend: "+greeting(user_response))
            else:
                print("worst friend: "+response(user_response))
                sent_tokens.remove(user_response)
    else:
        flag=False
        print("Yeah, whatever. Don't talk to me.") 
